name: Checks

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  typos:
    runs-on: ubuntu-latest
    name: spell check with typos
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run typos command
        shell: nix shell nixpkgs#typos --quiet --command bash {0}
        run: sh ./scripts/check-typos-in-files.sh

  cocogitto:
    runs-on: ubuntu-latest
    name: check conventional commits
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      # Only run this step in the main branch.
      - name: Check the latest commit message
        if: github.ref == 'refs/heads/main'
        shell: nix shell nixpkgs#cocogitto --quiet --command bash {0}
        run: cog check HEAD..HEAD
      # Only run this step in a Pull Request.
      - name: Check the Pull Request title
        if: github.event_name == 'pull_request'
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        shell: nix shell nixpkgs#cocogitto --quiet --command bash {0}
        run: |
          git config user.name "github-actions-workflow"
          git config user.email "temp@users.noreply.github.com"
          cog verify "$PR_TITLE"

  markdownlint:
    runs-on: ubuntu-latest
    name: lint markdown by markdownlint
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run markdownlint command
        shell: nix shell nixpkgs#markdownlint-cli --quiet --command bash {0}
        run: markdownlint .

  nix-flake-check:
    runs-on: ubuntu-latest
    name: nix flake check
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run nix command
        run: nix flake check --impure --all-systems

  shellcheck:
    runs-on: ubuntu-latest
    name: lint shell scripts by shellcheck
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - name: Run shellcheck command
        shell: nix shell nixpkgs#shellcheck --quiet --command bash {0}
        run: shellcheck ./scripts/*.sh
